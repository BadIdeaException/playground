name: Create and Publish Install Script

on:
  push:
    tags:
      - 'v*'

jobs:
  create-install-script:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create install script
        run: |
          cat > install.sh << 'EOF'
          #!/bin/bash
          set -e

          # playground installer script
          # Usage: curl -fsSL https://github.com/${{ github.repository }}/releases/latest/download/install.sh | bash

          REPO="${{ github.repository }}"
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          BIN_DIR="${HOME}/.local/bin"
          INSTALL_DIR="${HOME}/.local/share/playground"

          # Colors for output
          RED='\033[0;31m'
          GREEN='\033[0;32m'
          YELLOW='\033[1;33m'
          NC='\033[0m' # No Color

          echo -e "${GREEN}Installing playground ${VERSION}...${NC}"

          # Create directories
          mkdir -p "${BIN_DIR}"
          mkdir -p "${INSTALL_DIR}"

          # Download and extract the release
          TARBALL_URL="https://github.com/${REPO}/archive/refs/tags/${VERSION}.tar.gz"
          TEMP_DIR=$(mktemp -d)
          
          echo -e "${YELLOW}Downloading from ${TARBALL_URL}...${NC}"
          curl -fsSL "${TARBALL_URL}" | tar -xz -C "${TEMP_DIR}" --strip-components=1

          # Copy the entire project to the install directory
          cp -r "${TEMP_DIR}/." "${INSTALL_DIR}/"
          
          # Create symlink in user's bin directory
          ln -sf "${INSTALL_DIR}/bin/playground" "${BIN_DIR}/playground"
          
          # Check if Ruby and bundler are available
          if ! command -v ruby >/dev/null 2>&1; then
            echo -e "${RED}Error: Ruby is not installed. Please install Ruby first.${NC}"
            exit 1
          fi
          
          # Install Ruby dependencies
          echo -e "${YELLOW}Installing Ruby dependencies...${NC}"
          cd "${INSTALL_DIR}"
          
          if command -v bundler >/dev/null 2>&1; then
            bundle install --path vendor/bundle
          else
            gem install thor
            echo -e "${YELLOW}Note: Installed basic dependencies. For full functionality, install bundler.${NC}"
          fi
          cd - >/dev/null

          # Clean up
          rm -rf "${TEMP_DIR}"

          echo -e "${GREEN}âœ“ playground installed successfully!${NC}"
          echo -e "${YELLOW}Symlink created: ${BIN_DIR}/playground${NC}"
          echo -e "${YELLOW}Installation directory: ${INSTALL_DIR}${NC}"
          echo
          echo -e "${GREEN}To use playground, make sure ${BIN_DIR} is in your PATH:${NC}"
          echo -e "${YELLOW}export PATH=\"\$PATH:${BIN_DIR}\"${NC}"
          echo
          echo -e "${GREEN}Add this line to your shell profile (~/.bashrc, ~/.zshrc, etc.) to make it permanent.${NC}"
          echo
          echo -e "${GREEN}Test the installation with: playground help${NC}"
          EOF

      - name: Make install script executable
        run: chmod +x install.sh

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          body: |
            ## Installation

            ### Quick Install (recommended)
            ```bash
            curl -fsSL https://github.com/${{ github.repository }}/releases/download/${{ steps.get_version.outputs.VERSION }}/install.sh | bash
            ```

            ### Manual Installation
            1. Download the source code archive
            2. Extract it to your desired location
            3. Add the `bin/playground` script to your PATH
            4. Make sure Ruby and Bundler are installed on your system
            5. Run `bundle install` in the install location

            ## What's Changed
            - See commit history for detailed changes

      - name: Upload install script
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./install.sh
          asset_name: install.sh
          asset_content_type: text/plain

